:root {
  --base: #F5F1E8;
  --base-light: #fffcf1;
  --base-dark: #ede8db;
  --shadow: #C8C1B0;

  --letter-backside: #f7f7ef;

  --bg: #ffffff;
  --text: #0f1720;
  --muted: #6b7280;
  --accent: #111827;
  --accent-weak: rgba(17,24,39,0.50);
  --focus: #151515;
  --font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;

  --envelope-width: 500px;
  --envelope-half-width: calc(var(--envelope-width) / 2);
  --envelope-height: var(--envelope-width);
  --envelope-half-height: calc(var(--envelope-height) / 2);
}

* {
  border: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
}

@mixin center-by-all-means {
  display: flex;
  align-items: center;
  justify-content: center;
}

#helper-text {
  width: 100%;
  text-align: center;
  font-family: Arial, Helvetica, sans-serif;
}

@keyframes fadeIn {
  0% { opacity: 0; }
  83% { opacity: 0; }
  100% { opacity: 1; }
}


@keyframes fadeOut {
  0% { opacity: 1; }
  100% { opacity: 0; }
}

.container {
    min-height: 85vh;
    padding: 2em;
    @include center-by-all-means;
}

.content {
  position: relative;
  perspective: calc(var(--envelope-width) * 2.2);
}

.letter {
  position: absolute;
  top: 10px;
  left: 10px;
  width: calc(var(--envelope-width) - 20px);
  height: calc(var(--envelope-height) - 20px);
  @include center-by-all-means;
  z-index: 15;
  border-radius: 5px;
//   background: var(--letter);
  
  img {
      width: calc(var(--envelope-width) - 20px);
      height: calc(var(--envelope-height) - 20px);
      object-fit: cover;
      border-radius: 5px;
    }
}

.envelope {
  position: relative;
  width: var(--envelope-width);
  height: var(--envelope-height);
  background: linear-gradient(#cccbd7 0.5px, var(--base-dark) 0.5px);
  cursor: pointer;
}

.envelope .flap {
    position: absolute;
    background: red;
    top: 0;
    left: 0;
    width: var(--envelope-width);
    height: calc(var(--envelope-height) * 0.6);
    background-color: var(--base-light);
    transform-origin: top;
    z-index: 30;
    clip-path: polygon(0% 0%, 100% 0%, 50% 100%);
    
}

.envelope::after {
  content: '';
  position: absolute;
  top: 0;
  width: var(--envelope-width);
  height: var(--envelope-height);
  z-index: 25;
  background: 
    //bottom-right
    linear-gradient(42deg, var(--base-dark) 50%, var(--shadow) 50%, var(--base) 50%) var(--envelope-half-width) var(--envelope-half-width)/ var(--envelope-half-width) var(--envelope-half-width) no-repeat,
    //top-left
    linear-gradient(48.2deg, var(--base) 50%, var(--shadow) 50%, transparent 50%) 0px 10px / var(--envelope-half-width) var(--envelope-half-width) no-repeat,
    //bottom-left
    linear-gradient(137deg, var(--base) 50%, var(--shadow) 50%, var(--base-dark) 50%) 0px var(--envelope-half-width) / var(--envelope-half-width) var(--envelope-half-width) no-repeat,
    //top-right
    linear-gradient(131.5deg, transparent 50%, var(--shadow) 50%, var(--base) 50%) var(--envelope-half-width) 10px/ var(--envelope-half-width) var(--envelope-half-width) no-repeat; 
}


$card-size: calc(var(--envelope-width) - 20px);
$card-bg: var(--letter-backside);
$card-radius: 5px;
$transition-time: 1.6s;

.flipped {
        transform: rotateY(180deg);
    }

.card {
    position: relative;
    width: $card-size;
    height: $card-size;
    transition: all $transition-time ease;
    transform-style: preserve-3d;
    cursor: pointer;

    .front,
    .back {
        position: absolute;
        top: 0;
        left: 0;
        width: $card-size;
        height: $card-size;
        border-radius: $card-radius;
        background: $card-bg;
        backface-visibility: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .front {
        font-size: 30px;
    }
    
    .back {
        font-size: 18px;
        transform: rotateY(180deg);
        color: black;

        img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            opacity: 0.2;
        }

        .text-container {
            padding: 1.5em;
            width: 100%;
            height: 100%;
            z-index: 10;

            p {
                max-width: 100%;
                max-height: 100%;
                margin: 0;
                font-size: 2em;
                font-family: "Reenie Beanie","Nanum Pen Script", "Comic Sans MS", "Lucida Handwriting", "Brush Script MT", Arial, Helvetica, sans-serif;
            }
        }
    }
}

h1 {
  font-size: 2.5em;
  padding: .5em;
}

.upload-page {
  display: flex;
  flex-direction: column;
  align-items: center;

  & > * {
    max-width: min(560px, 90vw);
  }

  h1 {
    font-size: 2.4em;
    // align-self: flex-start; // overrides parent align-items
  }

  form {
    font-family: var(--font-family);
    color: var(--text);
    background: var(--bg);
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: .75em;

    input[type="checkbox"] {
      padding-left: 1.25em;
      width: 1.5em;
      height: 1.5em;
      accent-color: var(--accent);
      cursor: pointer;
    }
  
    input[type="text"],
    textarea {
      font: inherit;
      color: var(--text);
      background: transparent;
      border: 1px solid var(--accent-weak);
      padding: 10px 12px;
      border-radius: .5em;
      outline: none;
      min-height: 40px;
      transition: box-shadow 0.12s ease, border-color 0.12s ease;
    }
  
    textarea {
      resize: none;
      min-height: 96px;
      line-height: 1.4;
    }
  
    input[type="file"] {
      padding: 0;
      cursor: pointer;
    }

    .user-info-grid {
      display: grid;
      grid-template-columns: auto 1fr; // label + input
      gap: 1rem 1rem; 
      align-items: center;

      label {
        font-weight: 500;
      }

      input:not([type="file"]) {
        justify-self: end;
        padding: 0.4rem 0.6rem;
        border: 1px solid #ccc;
        border-radius: 6px;
        width: 100%;
      }
    }
  
    input[type="text"] {
      padding: 10px;
      border: 1px solid var(--accent-weak);
      border-radius: .5em;
      outline: none;
      transition: border-color 0.12s ease;
    }
  
    label[for] {
      display: inline-flex;
      align-items: center;
      background: transparent;
      font-size: 1.25rem;
      color: var(--text);
      transition: background 0.12s ease, border-color 0.12s ease;
      width: fit-content;
    }

    .user-info-grid-boolean {
      display: grid;
      grid-template-columns: auto 1fr; // label + input
      gap: 1rem .5rem; 
      align-items: center;
      justify-items: start;
      label[for="display_on_pegboard"] {
      display: flex;
      align-items: center; 
  
        i {
          margin-right: .25em;
          // &:hover {
          //   color: red;
          // }
        }
      }
    }

    
    label {
      font-size: 0.9rem;
      color: var(--muted);
      user-select: none;
    }
  
    button {
      font: inherit;
      padding: 10px 14px;
      border-radius: .5em;
      border: 1px solid transparent;
      background: var(--accent);
      color: #fff;
      cursor: pointer;
      min-height: 44px;
      transition: transform 0.06s ease, box-shadow 0.08s ease, opacity 0.08s ease;
      box-shadow: 0 1px 0 rgba(0,0,0,0.05);
  
      &:hover { background-color: #6b7280; }
      &:active { transform: translateY(0); }
      &:disabled { opacity: .6; cursor: not-allowed; transform: none; }
    }
  
    input:focus,
    textarea:focus,
    label[for]:focus,
    button:focus {
      box-shadow: 0 0 0 4px rgba(var(--focus), 0.12);
      border-color: var(--focus);
      outline: none;
    }
  }
}

abbr[data-tooltip] {
  position: relative;
  cursor: help;
}

/* Tooltip text */
abbr[data-tooltip]::after {
  content: attr(data-tooltip);
  position: absolute;
  bottom: 125%;
  left: 180px;
  transform: translateX(-50%);
  background-color: var(--base-dark);
  padding: 6px 10px;
  border: 1px solid var(--accent-weak);
  border-radius: 4px;
  white-space: normal;
  width:  360px;
  word-wrap: break-word;
  opacity: 0;
  pointer-events: none;
  z-index: 10;
  transition: opacity 0.1s;
}

/* Show tooltip on hover */
abbr[data-tooltip]:hover::after {
  opacity: 1;
}


.preview {
  margin-bottom: 1em;
  label {
    display: inline-flex;
    align-items: center;
    background: transparent;
    font-size: 1.25rem;
    color: var(--text);
    width: fit-content;
    margin-bottom: .75em;
  }

  .card {
    width: min(560px, 90vw);
    height: min(560px, 90vw);
    .back {
      width: min(560px, 90vw);
      height: min(560px, 90vw);
    }
  }
}

.corkboard-info {
  padding-left: 1.25em;
  max-width: 550px;
  a {
    color: white;
    text-decoration: underline;
    font-weight: bold;
  }
}

.corkboard-wrapper {
  // corkboard + border
  border: 5px solid #784646;
  background-image: url("../images/corkboard.jpg");
  min-height: 65vh;

}

.corkboard {
  display: grid;
  padding: 2vw;
  width: calc(100%);
  // min-height: 90vh;
  grid-template-columns: repeat(3, 1fr);
  gap: 2vw;

  img {
    aspect-ratio: 1;
    width: 100%;
    border-radius: 0.5rem;
    object-fit: cover;
    display: block;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
    transition: transform 0.2s ease;

    &:hover {
      transform: scale(1.0);
    }
  }
}

.uploaded-wrapper {
  p {
    margin-bottom: 1em;
    margin-left: 1em;
  }
}

@media (max-width: 600px) {
  :root {
    --envelope-width: 300px;
    --envelope-height: var(--envelope-width);
    --envelope-half-width: calc(var(--envelope-width) / 2);
    --envelope-half-height: calc(var(--envelope-height) / 2);
  }

  .corkboard {
    grid-template-columns: repeat(2, 1fr);

  }

  .envelope::after {
    background: 
      //bottom-right
      linear-gradient(42deg, var(--base-dark) 50%, var(--shadow) 50%, var(--base) 50%) var(--envelope-half-width) var(--envelope-half-width)/ var(--envelope-half-width) var(--envelope-half-width) no-repeat,
      //top-left
      linear-gradient(48.2deg, var(--base) 50%, var(--shadow) 50%, transparent 50%) 0px 10px / var(--envelope-half-width) var(--envelope-half-width) no-repeat,
      //bottom-left
      linear-gradient(137deg, var(--base) 50%, var(--shadow) 50%, var(--base-dark) 50%) 0px var(--envelope-half-width) / var(--envelope-half-width) var(--envelope-half-width) no-repeat,
      //top-right
      linear-gradient(131.5deg, transparent 50%, var(--shadow) 50%, var(--base) 50%) var(--envelope-half-width) 10px/ var(--envelope-half-width) var(--envelope-half-width) no-repeat; 
  }

  .content {
    perspective: calc(var(--envelope-width) * 2.8);
  }
}

@media (max-width: 350px) {
  .corkboard {
    grid-template-columns: 1fr;
  }
}